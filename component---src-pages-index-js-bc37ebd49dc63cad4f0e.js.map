{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["withStyles","theme","_inputInput","inputRoot","color","inputInput","paddingTop","spacing","unit","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","breakpoints","up","width","&:focus","_ref","data","classes","ingredients","edges","map","e","node","_useState","useState","searchQuery","setSearchQuery","filteredIngredients","filter","ingredient","name","toLowerCase","includes","trim","slice","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","Fragment","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","position","_material_ui_icons_Search__WEBPACK_IMPORTED_MODULE_7___default","placeholder","fullWidth","autoFocus","root","input","value","onChange","event","target","dense","index","key","primary","secondary","description","query","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","link","rel","href","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match"],"mappings":"0NA2EeA,+BA3DA,SAAAC,GAAK,IAAAC,EAAA,MAAK,CACvBC,UAAW,CACTC,MAAO,WAETC,YAAUH,EAAA,CACRI,WAAYL,EAAMM,QAAQC,KAC1BC,aAAcR,EAAMM,QAAQC,KAC5BE,cAAeT,EAAMM,QAAQC,KAC7BG,YAAaV,EAAMM,QAAQC,KAC3BI,WAAYX,EAAMY,YAAYC,OAAO,UAL7BZ,EAMPD,EAAMc,YAAYC,GAAG,OAAQ,CAC5BC,MAAO,IACPC,UAAW,CACTD,MAAO,MATHf,KAuDGF,CAxCG,SAAAmB,GAAuB,IAApBC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,QACnBC,EAAcF,EAAKE,YAAYC,MAAMC,IAAI,SAAAC,GAAC,OAAIA,EAAEC,OADfC,EAEDC,mBAAS,IAAxCC,EAFgCF,EAAA,GAEnBG,EAFmBH,EAAA,GAGjCI,EAAsBT,EACzBU,OAAO,SAAAC,GAAU,OAAIA,EAAWC,KAAKC,cAAcC,SAASP,EAAYQ,OAAOF,iBAC/EG,MAAM,EAAG,IAEZ,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,MAAM,OAAOC,SAAU,mCAC5BN,EAAAC,EAAAC,cAACK,EAAA,EAAD,MACAP,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQC,SAAS,UACfR,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACO,EAAAR,EAAD,MACAD,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEG,YAAY,oBACZC,WAAS,EACTC,WAAS,EACT9B,QAAS,CACP+B,KAAM/B,EAAQlB,UACdkD,MAAOhC,EAAQhB,YAEjBiD,MAAOzB,EACP0B,SAAU,SAAAC,GAAK,OAAI1B,EAAe0B,EAAMC,OAAOH,YAIrDf,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMY,OAAK,GACR3B,EAAoBP,IAAI,SAACS,EAAY0B,GAAb,OACvBpB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUc,IAAKD,GACbpB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEe,QAAS5B,EAAWC,KACpB4B,UAAW7B,EAAW8B,aAAe,qBAU5C,IAAMC,EAAK,8GCjElB,SAASC,EAAT9C,GAA4D,IAA5C4C,EAA4C5C,EAA5C4C,YAAaG,EAA+B/C,EAA/B+C,KAAMC,EAAyBhD,EAAzBgD,KAAMtB,EAAmB1B,EAAnB0B,SAAUD,EAASzB,EAATyB,MACzCwB,EADkDC,EAAAjD,KAClDgD,KAcFE,EAAkBP,GAAeK,EAAKG,aAAaR,YAEzD,OACES,EAAAhC,EAAAC,cAACgC,EAAAjC,EAAD,CACEkC,eAAgB,CACdR,QAEFtB,MAAOA,EACP+B,cAAa,QAAUP,EAAKG,aAAa3B,MACzCgC,KAAM,CACJ,CACEC,IAAK,aACLC,KAAM,8DAER,CACED,IAAK,aACLC,KAAM,2DAGVX,KAAM,CACJ,CACEjC,KAAI,cACJ6C,QAAST,GAEX,CACEU,SAAQ,WACRD,QAASnC,GAEX,CACEoC,SAAQ,iBACRD,QAAST,GAEX,CACEU,SAAQ,UACRD,QAAO,WAET,CACE7C,KAAI,eACJ6C,QAAO,WAET,CACE7C,KAAI,kBACJ6C,QAASX,EAAKG,aAAaU,QAE7B,CACE/C,KAAI,gBACJ6C,QAASnC,GAEX,CACEV,KAAI,sBACJ6C,QAAST,IAGVY,OACCrC,EAASsC,OAAS,EACd,CACEjD,KAAI,WACJ6C,QAASlC,EAASuC,KAAT,OAEX,IAELF,OAAOf,KAKhBF,EAAIoB,aAAe,CACjBnB,KAAI,KACJC,KAAM,GACNtB,SAAU,IAGZoB,EAAIqB,UAAY,CACdvB,YAAawB,IAAUC,OACvBtB,KAAMqB,IAAUC,OAChBrB,KAAMoB,IAAUE,MAChB5C,SAAU0C,IAAUG,QAAQH,IAAUC,QACtC5C,MAAO2C,IAAUC,OAAOG,YAGX1B,uMC3Gf,IAAA2B,EAASC,EAAQ,IAAcC,EAC/BC,EAAAC,SAAAC,UACAC,EAAA,wBACA,SAGAH,GAAkBF,EAAQ,KAAgBD,EAAAG,EAH1C,OAG0C,CAC1CI,cAAA,EACAC,IAAA,WACA,IACA,UAAAC,MAAAC,MAAAJ,GAAA,GACK,MAAAzE,GACL","file":"component---src-pages-index-js-bc37ebd49dc63cad4f0e.js","sourcesContent":["import React, { useState } from 'react'\nimport { graphql } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  AppBar,\n  Toolbar,\n  InputBase,\n  CssBaseline\n} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst styles = theme => ({\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit,\n    transition: theme.transitions.create('width'),\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  }\n})\n\nconst IndexPage = ({ data, classes }) => {\n  const ingredients = data.ingredients.edges.map(e => e.node)\n  const [searchQuery, setSearchQuery] = useState('')\n  const filteredIngredients = ingredients\n    .filter(ingredient => ingredient.name.toLowerCase().includes(searchQuery.trim().toLowerCase()))\n    .slice(0, 25)\n\n  return (\n    <>\n      <SEO title='Home' keywords={[`gatsby`, `application`, `react`]} />\n      <CssBaseline />\n      <AppBar position='sticky'>\n        <Toolbar>\n          <SearchIcon />\n          <InputBase\n            placeholder='Search ingredient'\n            fullWidth\n            autoFocus\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput\n            }}\n            value={searchQuery}\n            onChange={event => setSearchQuery(event.target.value)}\n          />\n        </Toolbar>\n      </AppBar>\n      <List dense>\n        {filteredIngredients.map((ingredient, index) => (\n          <ListItem key={index}>\n            <ListItemText\n              primary={ingredient.name}\n              secondary={ingredient.description || 'Not vegan'} />\n          </ListItem>\n        ))}\n      </List>\n    </>\n  )\n}\n\nexport default withStyles(styles)(IndexPage)\n\nexport const query = graphql`\n  {\n    ingredients: allNonVeganYaml {\n      edges {\n        node {\n          name\n          description\n        }\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO ({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      link={[\n        {\n          rel: 'stylesheet',\n          href: 'https://fonts.googleapis.com/css?family=Roboto:300,400,500'\n        },\n        {\n          rel: 'stylesheet',\n          href: 'https://fonts.googleapis.com/icon?family=Material+Icon'\n        }\n      ]}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `)\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: []\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}